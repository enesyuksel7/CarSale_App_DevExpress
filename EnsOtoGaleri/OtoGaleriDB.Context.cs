//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnsOtoGaleri
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OtoGaleriDBEntities : DbContext
    {
        public OtoGaleriDBEntities()
            : base("name=OtoGaleriDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Arabalar> Arabalar { get; set; }
        public virtual DbSet<MasterAdmin> MasterAdmin { get; set; }
        public virtual DbSet<MasterLog> MasterLog { get; set; }
        public virtual DbSet<Satislar> Satislar { get; set; }
        public virtual DbSet<Sigortalar> Sigortalar { get; set; }
        public virtual DbSet<SubeAbonelik> SubeAbonelik { get; set; }
        public virtual DbSet<SubeAdmin> SubeAdmin { get; set; }
        public virtual DbSet<SubeLog> SubeLog { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int Ekle(string kullaniciAdi, Nullable<System.DateTime> tarih, string islem, string aciklama)
        {
            var kullaniciAdiParameter = kullaniciAdi != null ?
                new ObjectParameter("KullaniciAdi", kullaniciAdi) :
                new ObjectParameter("KullaniciAdi", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("Tarih", tarih) :
                new ObjectParameter("Tarih", typeof(System.DateTime));
    
            var islemParameter = islem != null ?
                new ObjectParameter("Islem", islem) :
                new ObjectParameter("Islem", typeof(string));
    
            var aciklamaParameter = aciklama != null ?
                new ObjectParameter("Aciklama", aciklama) :
                new ObjectParameter("Aciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ekle", kullaniciAdiParameter, tarihParameter, islemParameter, aciklamaParameter);
        }
    
        public virtual int Guncelle(Nullable<int> logID, string kullaniciAdi, Nullable<System.DateTime> tarih, string islem, string aciklama)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            var kullaniciAdiParameter = kullaniciAdi != null ?
                new ObjectParameter("KullaniciAdi", kullaniciAdi) :
                new ObjectParameter("KullaniciAdi", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("Tarih", tarih) :
                new ObjectParameter("Tarih", typeof(System.DateTime));
    
            var islemParameter = islem != null ?
                new ObjectParameter("Islem", islem) :
                new ObjectParameter("Islem", typeof(string));
    
            var aciklamaParameter = aciklama != null ?
                new ObjectParameter("Aciklama", aciklama) :
                new ObjectParameter("Aciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Guncelle", logIDParameter, kullaniciAdiParameter, tarihParameter, islemParameter, aciklamaParameter);
        }
    
        public virtual ObjectResult<Listele_Result> Listele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Listele_Result>("Listele");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Ekle2(string kullaniciAdi, Nullable<System.DateTime> tarih, string islem, string aciklama)
        {
            var kullaniciAdiParameter = kullaniciAdi != null ?
                new ObjectParameter("KullaniciAdi", kullaniciAdi) :
                new ObjectParameter("KullaniciAdi", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("Tarih", tarih) :
                new ObjectParameter("Tarih", typeof(System.DateTime));
    
            var islemParameter = islem != null ?
                new ObjectParameter("Islem", islem) :
                new ObjectParameter("Islem", typeof(string));
    
            var aciklamaParameter = aciklama != null ?
                new ObjectParameter("Aciklama", aciklama) :
                new ObjectParameter("Aciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Ekle2", kullaniciAdiParameter, tarihParameter, islemParameter, aciklamaParameter);
        }
    
        public virtual int Guncelle2(Nullable<int> logID, string kullaniciAdi, Nullable<System.DateTime> tarih, string islem, string aciklama)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            var kullaniciAdiParameter = kullaniciAdi != null ?
                new ObjectParameter("KullaniciAdi", kullaniciAdi) :
                new ObjectParameter("KullaniciAdi", typeof(string));
    
            var tarihParameter = tarih.HasValue ?
                new ObjectParameter("Tarih", tarih) :
                new ObjectParameter("Tarih", typeof(System.DateTime));
    
            var islemParameter = islem != null ?
                new ObjectParameter("Islem", islem) :
                new ObjectParameter("Islem", typeof(string));
    
            var aciklamaParameter = aciklama != null ?
                new ObjectParameter("Aciklama", aciklama) :
                new ObjectParameter("Aciklama", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Guncelle2", logIDParameter, kullaniciAdiParameter, tarihParameter, islemParameter, aciklamaParameter);
        }
    
        public virtual ObjectResult<Listele2_Result> Listele2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Listele2_Result>("Listele2");
        }
    }
}
